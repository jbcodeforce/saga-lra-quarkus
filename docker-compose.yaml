version: '3.7'
services:
  zookeeper:
    image: quay.io/strimzi/kafka:latest-kafka-3.1.0
    container_name: zookeeper
    hostname: zookeeper
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    image: quay.io/strimzi/kafka:latest-kafka-3.1.0
    container_name: kafka
    hostname: kafka
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} \
      --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} \
      --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP} \
      --override inter.broker.listener.name=$${KAFKA_INTER_BROKER_LISTENER_NAME} \
      --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: EXTERNAL://0.0.0.0:9092,INTERNAL://kafka:29092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  coordinator:
    image: quay.io/jbcodeforce/saga-lra-coordinator
    container_name: coordinator
    hostname: coordinatator
    ports:
      - 50000:50000
  orderms:
    image: quay.io/jbcodeforce/saga-lra-order-ms
    container_name: orderms
    hostname: orderms
    ports:
      - 8080:8080
  voyagems:
    image: quay.io/jbcodeforce/saga-lra-voyage-ms
    container_name: voyagems
    hostname: voyagems
    ports:
      - 8082:8082
  reeferms:
    image: quay.io/jbcodeforce/saga-lra-reefer-ms
    container_name: reeferms
    hostname: reeferms
    ports:
      - 8083:8083